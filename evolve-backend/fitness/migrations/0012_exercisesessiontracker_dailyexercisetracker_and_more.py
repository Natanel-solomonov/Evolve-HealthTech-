# Generated by Django 5.2.4 on 2025-07-21 20:30

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('fitness', '0011_cardioworkout'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExerciseSessionTracker',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(help_text='The date when the exercise was completed.')),
                ('session_name', models.CharField(help_text='Name or type of the exercise session.', max_length=255)),
                ('duration_minutes', models.PositiveIntegerField(help_text='Duration of the exercise session in minutes.')),
                ('calories_burned', models.PositiveIntegerField(default=0, help_text='Estimated calories burned during this session.')),
                ('intensity_level', models.CharField(choices=[('low', 'Low'), ('moderate', 'Moderate'), ('high', 'High'), ('very_high', 'Very High')], default='moderate', help_text='Intensity level of the exercise session.', max_length=20)),
                ('exercise_type', models.CharField(choices=[('cardio', 'Cardio'), ('strength', 'Strength Training'), ('flexibility', 'Flexibility'), ('sports', 'Sports'), ('other', 'Other')], default='other', help_text='Type of exercise performed.', max_length=50)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the exercise session.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(help_text='The user who completed this exercise session.', on_delete=django.db.models.deletion.CASCADE, related_name='exercise_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Exercise Session',
                'verbose_name_plural': 'Exercise Sessions',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DailyExerciseTracker',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(help_text='The date for which exercise is being tracked.')),
                ('total_minutes', models.PositiveIntegerField(default=0, help_text='Total exercise minutes for this date.')),
                ('exercise_goal_minutes', models.PositiveIntegerField(default=60, help_text='Daily exercise goal in minutes.')),
                ('total_calories_burned', models.PositiveIntegerField(default=0, help_text='Total calories burned from exercise on this date.')),
                ('calories_burned_goal', models.PositiveIntegerField(default=500, help_text='Daily calories burned goal from exercise.')),
                ('session_count', models.PositiveIntegerField(default=0, help_text='Number of exercise sessions completed.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(help_text='The user whose exercise is being tracked.', on_delete=django.db.models.deletion.CASCADE, related_name='daily_exercise', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Daily Exercise Tracker',
                'verbose_name_plural': 'Daily Exercise Trackers',
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='DailyStepsTracker',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(help_text='The date for which steps are being tracked.')),
                ('step_count', models.PositiveIntegerField(default=0, help_text='Total steps taken on this date.')),
                ('step_goal', models.PositiveIntegerField(default=10000, help_text='Daily step goal for this user.')),
                ('distance_miles', models.FloatField(default=0.0, help_text='Distance covered in miles based on steps.')),
                ('calories_burned', models.PositiveIntegerField(default=0, help_text='Estimated calories burned from steps.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(help_text='The user whose steps are being tracked.', on_delete=django.db.models.deletion.CASCADE, related_name='daily_steps', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Daily Steps Tracker',
                'verbose_name_plural': 'Daily Steps Trackers',
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='WeeklyMilesTracker',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('week_start_date', models.DateField(help_text='The Monday that starts this week.')),
                ('total_miles', models.FloatField(default=0.0, help_text='Total miles covered this week.')),
                ('miles_goal', models.FloatField(default=20.0, help_text='Weekly miles goal.')),
                ('miles_from_steps', models.FloatField(default=0.0, help_text='Miles accumulated from daily step tracking.')),
                ('miles_from_exercise', models.FloatField(default=0.0, help_text='Miles from recorded exercise sessions.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(help_text='The user whose weekly miles are being tracked.', on_delete=django.db.models.deletion.CASCADE, related_name='weekly_miles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Weekly Miles Tracker',
                'verbose_name_plural': 'Weekly Miles Trackers',
                'ordering': ['-week_start_date'],
                'unique_together': {('user', 'week_start_date')},
            },
        ),
    ]
