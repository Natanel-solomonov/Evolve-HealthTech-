# Generated by Django 5.2 on 2025-08-04 01:08

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DrugCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='medications.drugcategory')),
            ],
            options={
                'verbose_name_plural': 'Drug Categories',
            },
        ),
        migrations.CreateModel(
            name='OTCMedication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product_name', models.CharField(db_index=True, max_length=255)),
                ('brand_name', models.CharField(blank=True, db_index=True, max_length=255)),
                ('active_ingredients', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, help_text='List of active ingredients', size=None)),
                ('inactive_ingredients', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, help_text='List of inactive ingredients', size=None)),
                ('strength', models.CharField(blank=True, max_length=255)),
                ('dosage_form', models.CharField(blank=True, max_length=100)),
                ('package_size', models.CharField(blank=True, max_length=100)),
                ('otc_monograph', models.CharField(blank=True, help_text='FDA OTC monograph classification', max_length=255)),
                ('upc_code', models.CharField(blank=True, help_text='Universal Product Code', max_length=20)),
                ('drug_facts', models.JSONField(blank=True, default=dict, help_text='Structured drug facts data')),
                ('purpose', models.CharField(blank=True, help_text='What the product is for', max_length=255)),
                ('uses', models.TextField(blank=True, help_text='What the product treats')),
                ('warnings', models.TextField(blank=True)),
                ('directions', models.TextField(blank=True, help_text='How to use the product')),
                ('other_information', models.TextField(blank=True)),
                ('label_image_url', models.URLField(blank=True, help_text='URL to drug facts label image')),
                ('package_image_url', models.URLField(blank=True, help_text='URL to product package image')),
                ('is_active', models.BooleanField(default=True)),
                ('search_keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, help_text='Keywords for search optimization', size=None)),
                ('categories', models.ManyToManyField(blank=True, to='medications.drugcategory')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medications.manufacturer')),
            ],
        ),
        migrations.CreateModel(
            name='PrescriptionMedication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand_name', models.CharField(db_index=True, max_length=255)),
                ('generic_name', models.CharField(db_index=True, max_length=255)),
                ('active_ingredients', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, help_text='List of active ingredients', size=None)),
                ('ndc_number', models.CharField(db_index=True, help_text='National Drug Code', max_length=20, unique=True)),
                ('fda_application_number', models.CharField(blank=True, max_length=20)),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('strength', models.CharField(blank=True, max_length=255)),
                ('dosage_form', models.CharField(blank=True, max_length=100)),
                ('route_of_administration', models.CharField(blank=True, max_length=100)),
                ('drug_label_text', models.TextField(blank=True, help_text='FDA drug label content')),
                ('indications', models.TextField(blank=True, help_text='What the drug is used for')),
                ('contraindications', models.TextField(blank=True, help_text='When not to use the drug')),
                ('warnings_precautions', models.TextField(blank=True)),
                ('side_effects', models.TextField(blank=True)),
                ('dosage_instructions', models.TextField(blank=True)),
                ('label_image_url', models.URLField(blank=True, help_text='URL to drug label image')),
                ('pill_image_url', models.URLField(blank=True, help_text='URL to pill/product image')),
                ('is_active', models.BooleanField(default=True)),
                ('search_keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, help_text='Keywords for search optimization', size=None)),
                ('categories', models.ManyToManyField(blank=True, to='medications.drugcategory')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medications.manufacturer')),
            ],
        ),
        migrations.CreateModel(
            name='Supplement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product_name', models.CharField(db_index=True, max_length=255)),
                ('brand_name', models.CharField(blank=True, db_index=True, max_length=255)),
                ('supplement_ingredients', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, help_text='List of supplement ingredients', size=None)),
                ('other_ingredients', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, help_text='List of other ingredients', size=None)),
                ('serving_size', models.CharField(blank=True, max_length=100)),
                ('servings_per_container', models.CharField(blank=True, max_length=50)),
                ('dosage_form', models.CharField(blank=True, max_length=100)),
                ('supplement_facts', models.JSONField(blank=True, default=dict, help_text='Structured supplement facts data')),
                ('upc_code', models.CharField(blank=True, help_text='Universal Product Code', max_length=20)),
                ('intended_use', models.TextField(blank=True, help_text='What the supplement is intended for')),
                ('directions', models.TextField(blank=True, help_text='How to use the supplement')),
                ('warnings', models.TextField(blank=True)),
                ('other_information', models.TextField(blank=True)),
                ('label_image_url', models.URLField(blank=True, help_text='URL to supplement facts label image')),
                ('package_image_url', models.URLField(blank=True, help_text='URL to product package image')),
                ('is_active', models.BooleanField(default=True)),
                ('search_keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, help_text='Keywords for search optimization', size=None)),
                ('categories', models.ManyToManyField(blank=True, to='medications.drugcategory')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medications.manufacturer')),
            ],
        ),
        migrations.CreateModel(
            name='UserMedication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('custom_name', models.CharField(blank=True, help_text="User's custom name for this medication", max_length=255)),
                ('dosage', models.CharField(blank=True, max_length=100)),
                ('frequency', models.CharField(blank=True, max_length=100)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('prescribing_doctor', models.CharField(blank=True, max_length=255)),
                ('otc_medication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='medications.otcmedication')),
                ('prescription_medication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='medications.prescriptionmedication')),
                ('supplement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='medications.supplement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MedicationDose',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scheduled_time', models.DateTimeField()),
                ('taken_time', models.DateTimeField(blank=True, null=True)),
                ('was_taken', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('user_medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doses', to='medications.usermedication')),
            ],
        ),
        migrations.AddIndex(
            model_name='otcmedication',
            index=models.Index(fields=['product_name', 'brand_name'], name='medications_product_8cf62e_idx'),
        ),
        migrations.AddIndex(
            model_name='otcmedication',
            index=models.Index(fields=['manufacturer'], name='medications_manufac_497c91_idx'),
        ),
        migrations.AddIndex(
            model_name='otcmedication',
            index=models.Index(fields=['upc_code'], name='medications_upc_cod_aa9d3d_idx'),
        ),
        migrations.AddIndex(
            model_name='prescriptionmedication',
            index=models.Index(fields=['brand_name', 'generic_name'], name='medications_brand_n_026612_idx'),
        ),
        migrations.AddIndex(
            model_name='prescriptionmedication',
            index=models.Index(fields=['ndc_number'], name='medications_ndc_num_ba461f_idx'),
        ),
        migrations.AddIndex(
            model_name='prescriptionmedication',
            index=models.Index(fields=['manufacturer'], name='medications_manufac_099e31_idx'),
        ),
        migrations.AddIndex(
            model_name='supplement',
            index=models.Index(fields=['product_name', 'brand_name'], name='medications_product_7021f3_idx'),
        ),
        migrations.AddIndex(
            model_name='supplement',
            index=models.Index(fields=['manufacturer'], name='medications_manufac_7464eb_idx'),
        ),
        migrations.AddIndex(
            model_name='supplement',
            index=models.Index(fields=['upc_code'], name='medications_upc_cod_0286f7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='usermedication',
            unique_together={('user', 'otc_medication'), ('user', 'prescription_medication'), ('user', 'supplement')},
        ),
        migrations.AddIndex(
            model_name='medicationdose',
            index=models.Index(fields=['user_medication', 'scheduled_time'], name='medications_user_me_a396b6_idx'),
        ),
        migrations.AddIndex(
            model_name='medicationdose',
            index=models.Index(fields=['scheduled_time'], name='medications_schedul_69eb82_idx'),
        ),
    ]
