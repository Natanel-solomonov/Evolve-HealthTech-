# Generated by Django 5.2 on 2025-06-18 01:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('nutrition', '0006_dailycalorietracker_calcium_milligrams_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the custom food.', max_length=255)),
                ('barcode_id', models.CharField(blank=True, help_text='Optional unique barcode ID for this food.', max_length=255, null=True, unique=True)),
                ('calories', models.FloatField(help_text='Calories per serving.')),
                ('protein', models.FloatField(help_text='Grams of protein per serving.')),
                ('carbs', models.FloatField(help_text='Grams of carbohydrates per serving.')),
                ('fat', models.FloatField(help_text='Grams of fat per serving.')),
                ('calcium', models.FloatField(blank=True, help_text='Milligrams of calcium per serving.', null=True)),
                ('iron', models.FloatField(blank=True, help_text='Milligrams of iron per serving.', null=True)),
                ('potassium', models.FloatField(blank=True, help_text='Milligrams of potassium per serving.', null=True)),
                ('vitamin_a', models.FloatField(blank=True, help_text='Micrograms of Vitamin A per serving.', null=True)),
                ('vitamin_c', models.FloatField(blank=True, help_text='Milligrams of Vitamin C per serving.', null=True)),
                ('vitamin_b12', models.FloatField(blank=True, help_text='Micrograms of Vitamin B12 per serving.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(help_text='The user who created this custom food.', on_delete=django.db.models.deletion.CASCADE, related_name='custom_foods', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
