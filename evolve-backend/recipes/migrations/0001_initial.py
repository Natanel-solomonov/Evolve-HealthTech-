# Generated by Django 5.2 on 2025-07-15 17:43

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Ingredient',
                'verbose_name_plural': 'Ingredients',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('prep_time', models.PositiveIntegerField(blank=True, help_text='Preparation time in minutes', null=True)),
                ('cook_time', models.PositiveIntegerField(blank=True, help_text='Cooking time in minutes', null=True)),
                ('total_time', models.PositiveIntegerField(blank=True, help_text='Total time in minutes', null=True)),
                ('servings', models.PositiveIntegerField(blank=True, help_text='Number of servings', null=True)),
                ('difficulty', models.CharField(blank=True, choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], max_length=20, null=True)),
                ('cuisine', models.CharField(blank=True, max_length=100, null=True)),
                ('source_url', models.URLField(blank=True, help_text='Original source URL if scraped', null=True)),
                ('source_name', models.CharField(blank=True, help_text='Original source name', max_length=200, null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, default=list, help_text='List of tags for categorization')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Recipe',
                'verbose_name_plural': 'Recipes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('size', models.CharField(blank=True, help_text="e.g. 'large', '12-inch'", max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Equipment',
                'verbose_name_plural': 'Equipment',
                'ordering': ['name'],
                'unique_together': {('name', 'size')},
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.FloatField()),
                ('unit', models.CharField(help_text="'cups', 'tbsp', 'each', etc.", max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this ingredient', null=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of ingredient in the list')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='recipes.ingredient')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_ingredients', to='recipes.recipe')),
            ],
            options={
                'verbose_name': 'Recipe Ingredient',
                'verbose_name_plural': 'Recipe Ingredients',
                'ordering': ['recipe', 'order'],
                'unique_together': {('recipe', 'ingredient', 'quantity', 'unit')},
            },
        ),
        migrations.CreateModel(
            name='RecipeNutrition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('calories', models.PositiveIntegerField(blank=True, null=True)),
                ('protein', models.FloatField(blank=True, help_text='Protein in grams', null=True)),
                ('carbs', models.FloatField(blank=True, help_text='Carbohydrates in grams', null=True)),
                ('fat', models.FloatField(blank=True, help_text='Fat in grams', null=True)),
                ('fiber', models.FloatField(blank=True, help_text='Fiber in grams', null=True)),
                ('sugar', models.FloatField(blank=True, help_text='Sugar in grams', null=True)),
                ('sodium', models.FloatField(blank=True, help_text='Sodium in milligrams', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recipe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='nutrition', to='recipes.recipe')),
            ],
            options={
                'verbose_name': 'Recipe Nutrition',
                'verbose_name_plural': 'Recipe Nutrition',
            },
        ),
        migrations.CreateModel(
            name='InstructionStep',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.PositiveIntegerField()),
                ('template', models.TextField(help_text='Use {ri:1}, {eq:2} etc. to mark RecipeIngredient or Equipment by PK.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('equipment', models.ManyToManyField(blank=True, related_name='instruction_steps', to='recipes.equipment')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='recipes.recipe')),
                ('ingredients', models.ManyToManyField(blank=True, related_name='instruction_steps', to='recipes.recipeingredient')),
            ],
            options={
                'verbose_name': 'Instruction Step',
                'verbose_name_plural': 'Instruction Steps',
                'ordering': ['recipe', 'order'],
                'unique_together': {('recipe', 'order')},
            },
        ),
    ]
